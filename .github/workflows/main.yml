name: CI

on:
  push:
    branches:
      - demo
  pull_request:
    branches:
      - demo

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ALLURE_RESULTS_DIR: target/allure-results

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: demo

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean test

      - name: Upload Allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: ${{ env.ALLURE_RESULTS_DIR }}

      - name: Install Allure
        run: |
          ALLURE_VERSION=2.13.9
          wget -qO- https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz | tar -xz -C /opt/
          sudo ln -s /opt/allure-${ALLURE_VERSION}/bin/allure /usr/bin/allure

      - name: Generate Allure Report
        run: |
          mkdir allure-report
          allure generate ${{ env.ALLURE_RESULTS_DIR }} -o allure-report
        env:
          JAVA_HOME: ${{ runner.tool_cache }}/temurin/19.0.1/x64

      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report

      - name: Notify success
        if: success()
        run: echo "Build succeeded, Allure report generated."

      - name: Notify unstable
        if: failure()
        run: echo "Build unstable, Allure report generated with test failures."

      - name: Cleanup workspace
        if: always()
        run: rm -rf *
